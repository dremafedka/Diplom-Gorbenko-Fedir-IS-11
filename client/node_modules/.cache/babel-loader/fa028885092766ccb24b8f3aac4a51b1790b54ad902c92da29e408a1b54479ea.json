{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000';\nexport const registerUser = async payload => {\n  const res = await fetch(`${API_BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка при реєстрації');\n  }\n  return res.json();\n};\nexport const loginUser = async credentials => {\n  const res = await fetch(`${API_BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка авторизації');\n  }\n  return res.json();\n};\nexport const createTraining = async trainingData => {\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(trainingData)\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка створення тренування');\n  }\n  return res.json();\n};\nexport const getCoachTrainings = async coachId => {\n  const res = await fetch(`${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`);\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\n  }\n  return res.json();\n};\nexport const getTrainings = async () => {\n  const res = await fetch(`${API_BASE_URL}/trainings`);\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\n  }\n  return res.json();\n};\nexport const signupForTraining = async (trainingId, athleteId) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      athlete_id: athleteId\n    })\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка запису на тренування');\n  }\n  return res.json();\n};\nexport const getTrainingParticipants = async trainingId => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/participants`);\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка отримання учасників');\n  }\n  return res.json();\n};\nexport const updateTraining = async (trainingId, updateData) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка оновлення тренування');\n  }\n  return res.json();\n};\n\n// Новий функціонал: скасування запису на тренування\nexport const cancelEnrollment = async (trainingId, athleteId) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/cancel`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      athlete_id: athleteId\n    })\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка скасування запису');\n  }\n  return res.json();\n};","map":{"version":3,"names":["API_BASE_URL","registerUser","payload","res","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","loginUser","credentials","createTraining","trainingData","getCoachTrainings","coachId","encodeURIComponent","getTrainings","signupForTraining","trainingId","athleteId","athlete_id","getTrainingParticipants","updateTraining","updateData","cancelEnrollment"],"sources":["D:/ProjectD/client/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\r\n\r\nexport const registerUser = async (payload) => {\r\n  const res = await fetch(`${API_BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(payload)\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка при реєстрації');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const loginUser = async (credentials) => {\r\n  const res = await fetch(`${API_BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(credentials)\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка авторизації');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const createTraining = async (trainingData) => {\r\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(trainingData)\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка створення тренування');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getCoachTrainings = async (coachId) => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`);\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getTrainings = async () => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings`);\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const signupForTraining = async (trainingId, athleteId) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/signup`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ athlete_id: athleteId })\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка запису на тренування');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getTrainingParticipants = async (trainingId) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/participants`);\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка отримання учасників');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const updateTraining = async (trainingId, updateData) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(updateData)\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка оновлення тренування');\r\n  }\r\n  return res.json();\r\n};\r\n\r\n// Новий функціонал: скасування запису на тренування\r\nexport const cancelEnrollment = async (trainingId, athleteId) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/cancel`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ athlete_id: athleteId })\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка скасування запису');\r\n  }\r\n  return res.json();\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}