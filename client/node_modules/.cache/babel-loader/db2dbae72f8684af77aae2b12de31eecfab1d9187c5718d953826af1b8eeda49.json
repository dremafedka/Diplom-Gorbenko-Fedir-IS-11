{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectD\\\\client\\\\src\\\\components\\\\Dashboards\\\\AthleteDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTrainings, getAthleteTrainings, signupForTraining } from '../../services/api';\nimport Modal from '../../components/Common/Modal';\nimport '../../styles/AthleteDashboard.css';\n\n// Константа категорій спорту та відповідних секцій (використовується і для фільтрації)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sportCategories = {\n  \"Ігри з м'ячем\": [\"Футбол\", \"Баскетбол\", \"Бадмінтон\", \"Волейбол\", \"Бейсбол\", \"Регбі\", \"Хокей\"],\n  \"Бойові мистецтва\": [\"Карате\", \"Бокс\", \"Ушу\", \"Джиу-джитсу\", \"ММА\"],\n  \"Легка атлетика\": [\"Біг\", \"Стрибки\", \"Метання\"],\n  \"Водні види спорту\": [\"Плавання\", \"Вітрильний спорт\", \"Каноїзм\"],\n  \"Екстремальні види спорту\": [\"Скейбординг\", \"Сноубординг\", \"Альпінізм\"],\n  \"Фітнес та тренажерний зал\": [\"Фітнес\", \"Силові тренування\", \"Йога\"]\n};\nconst AthleteDashboard = () => {\n  _s();\n  // Стан для завантаження всіх тренувань, створених тренерами\n  const [allTrainings, setAllTrainings] = useState([]);\n  // Стан для тренувань, на які спортсмен уже записаний\n  const [registeredTrainings, setRegisteredTrainings] = useState([]);\n  const [error, setError] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n\n  // Нові стани для фільтрації\n  const [filterCategory, setFilterCategory] = useState('');\n  const [filterSection, setFilterSection] = useState('');\n\n  // Завантаження всіх тренувань\n  const fetchAllTrainings = async () => {\n    try {\n      const data = await getTrainings();\n      setAllTrainings(data.trainings);\n    } catch (err) {\n      console.error(\"Помилка отримання тренувань:\", err.message);\n      setError(err.message);\n    }\n  };\n\n  // Завантаження тренувань, на які спортсмен записаний\n  const fetchRegisteredTrainings = async () => {\n    const athleteId = localStorage.getItem('userId');\n    if (!athleteId) {\n      setError(\"Будь ласка, увійдіть як спортсмен\");\n      return;\n    }\n    try {\n      const data = await getAthleteTrainings(athleteId);\n      setRegisteredTrainings(data.trainings);\n    } catch (err) {\n      console.error(\"Помилка отримання тренувань:\", err.message);\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchAllTrainings();\n    fetchRegisteredTrainings();\n  }, []);\n\n  // Функція групування тренувань за датою (формат dd.mm.yyyy)\n  const groupTrainingsByDate = trainings => {\n    const groups = {};\n    trainings.forEach(training => {\n      const dateObj = new Date(training.start_time);\n      const formattedDate = dateObj.toLocaleDateString('uk-UA', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      });\n      if (!groups[formattedDate]) {\n        groups[formattedDate] = [];\n      }\n      groups[formattedDate].push(training);\n    });\n    for (const date in groups) {\n      groups[date].sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n    }\n    return groups;\n  };\n\n  // Форматування часу (HH:MM)\n  const formatTime = timeString => {\n    const date = new Date(timeString);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Фільтруємо доступні тренування: видаляємо ті, на які спортсмен уже записаний\n  const registeredIds = new Set(registeredTrainings.map(t => t._id));\n  let availableTrainings = allTrainings.filter(t => !registeredIds.has(t._id));\n\n  // Додатково застосовуємо фільтрацію за категорією/секцією\n  if (filterCategory) {\n    availableTrainings = availableTrainings.filter(t => t.category === filterCategory);\n  }\n  if (filterSection) {\n    availableTrainings = availableTrainings.filter(t => t.section === filterSection);\n  }\n  const groupedAvailable = groupTrainingsByDate(availableTrainings);\n  const sortedAvailableDates = Object.keys(groupedAvailable).sort((a, b) => {\n    const [dayA, monthA, yearA] = a.split('.');\n    const [dayB, monthB, yearB] = b.split('.');\n    return new Date(yearA, monthA - 1, dayA) - new Date(yearB, monthB - 1, dayB);\n  });\n  const groupedRegistered = groupTrainingsByDate(registeredTrainings);\n  const sortedRegisteredDates = Object.keys(groupedRegistered).sort((a, b) => {\n    const [dayA, monthA, yearA] = a.split('.');\n    const [dayB, monthB, yearB] = b.split('.');\n    return new Date(yearA, monthA - 1, dayA) - new Date(yearB, monthB - 1, dayB);\n  });\n\n  // Функція для запису спортсмена на тренування\n  const handleSignup = async trainingId => {\n    setError('');\n    const athleteId = localStorage.getItem('userId');\n    if (!athleteId) {\n      setError(\"Будь ласка, увійдіть як спортсмен, щоб записатись на тренування.\");\n      return;\n    }\n    try {\n      const res = await signupForTraining(trainingId, athleteId);\n      setModalMessage(res.message);\n      setShowModal(true);\n      // Оновлюємо обидві секції після запису\n      fetchAllTrainings();\n      fetchRegisteredTrainings();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalMessage('');\n  };\n\n  // Обробка зміни фільтру за категорією\n  const handleCategoryFilterChange = e => {\n    setFilterCategory(e.target.value);\n    setFilterSection(''); // при зміні категорії скидаємо секцію\n  };\n\n  // Обробка зміни фільтру за секцією\n  const handleSectionFilterChange = e => {\n    setFilterSection(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u0430\\u0431\\u0456\\u043D\\u0435\\u0442 \\u0421\\u043F\\u043E\\u0440\\u0442\\u0441\\u043C\\u0435\\u043D\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      style: {\n        marginBottom: '20px',\n        maxWidth: '500px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0424\\u0456\\u043B\\u044C\\u0442\\u0440 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0445 \\u0442\\u0440\\u0435\\u043D\\u0443\\u0432\\u0430\\u043D\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filterCategory\",\n          children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u044F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"filterCategory\",\n          id: \"filterCategory\",\n          value: filterCategory,\n          onChange: handleCategoryFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- \\u0412\\u0441\\u0456 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u0457 --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), Object.keys(sportCategories).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filterSection\",\n          children: \"\\u0421\\u0435\\u043A\\u0446\\u0456\\u044F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"filterSection\",\n          id: \"filterSection\",\n          value: filterSection,\n          onChange: handleSectionFilterChange,\n          disabled: !filterCategory,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- \\u0412\\u0441\\u0456 \\u0441\\u0435\\u043A\\u0446\\u0456\\u0457 --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), filterCategory && sportCategories[filterCategory].map(sect => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sect,\n            children: sect\n          }, sect, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setFilterCategory('');\n          setFilterSection('');\n        },\n        className: \"submit-btn\",\n        style: {\n          maxWidth: '200px'\n        },\n        children: \"\\u0421\\u043A\\u0438\\u043D\\u0443\\u0442\\u0438 \\u0444\\u0456\\u043B\\u044C\\u0442\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trainings-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0456 \\u0442\\u0440\\u0435\\u043D\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), sortedAvailableDates.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u0438\\u0445 \\u0442\\u0440\\u0435\\u043D\\u0443\\u0432\\u0430\\u043D\\u044C.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this) : sortedAvailableDates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"training-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"training-date-header\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"trainings-list\",\n          children: groupedAvailable[date].map(t => {\n            const startTime = formatTime(t.start_time);\n            const endTime = formatTime(t.end_time);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"training-item\",\n              children: [\"\\u0417\\u0430\\u043D\\u044F\\u0442\\u0442\\u044F \\u0456\\u0437 \", t.section, \" \\u043E \", startTime, \" - \", endTime, \", \\u0432\\u0430\\u0440\\u0442\\u0456\\u0441\\u0442\\u044C \", t.price, \" \", t.currency, \", \\u0437\\u0430\\u043B\\u0438\\u0448\\u0438\\u043B\\u043E\\u0441\\u044C \\u043C\\u0456\\u0441\\u0446\\u044C: \", t.spots, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"signup-btn\",\n                onClick: () => handleSignup(t._id),\n                disabled: t.spots === 0,\n                children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u0438\\u0441\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this)]\n            }, t._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trainings-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0430\\u0448\\u0456 \\u0442\\u0440\\u0435\\u043D\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), sortedRegisteredDates.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0412\\u0438 \\u0449\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0430\\u043B\\u0438\\u0441\\u044F \\u043D\\u0430 \\u0442\\u0440\\u0435\\u043D\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this) : sortedRegisteredDates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"training-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"training-date-header\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"trainings-list\",\n          children: groupedRegistered[date].map(t => {\n            const startTime = formatTime(t.start_time);\n            const endTime = formatTime(t.end_time);\n            const signedCount = t.participants ? t.participants.length : 0;\n            const totalCapacity = signedCount + t.spots;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"training-item\",\n              children: [startTime, \" - \", endTime, \", \\u0437\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0456 \\u0443\\u0447\\u0430\\u0441\\u043D\\u0438\\u043A\\u0438: \", signedCount, \"\\\\\", totalCapacity]\n            }, t._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      modalType: \"success\",\n      message: modalMessage,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(AthleteDashboard, \"wKE7XfoBt4TjXNu6ylAg76m4DHk=\");\n_c = AthleteDashboard;\nexport default AthleteDashboard;\nvar _c;\n$RefreshReg$(_c, \"AthleteDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getTrainings","getAthleteTrainings","signupForTraining","Modal","jsxDEV","_jsxDEV","sportCategories","AthleteDashboard","_s","allTrainings","setAllTrainings","registeredTrainings","setRegisteredTrainings","error","setError","showModal","setShowModal","modalMessage","setModalMessage","filterCategory","setFilterCategory","filterSection","setFilterSection","fetchAllTrainings","data","trainings","err","console","message","fetchRegisteredTrainings","athleteId","localStorage","getItem","groupTrainingsByDate","groups","forEach","training","dateObj","Date","start_time","formattedDate","toLocaleDateString","day","month","year","push","date","sort","a","b","formatTime","timeString","toLocaleTimeString","hour","minute","registeredIds","Set","map","t","_id","availableTrainings","filter","has","category","section","groupedAvailable","sortedAvailableDates","Object","keys","dayA","monthA","yearA","split","dayB","monthB","yearB","groupedRegistered","sortedRegisteredDates","handleSignup","trainingId","res","handleModalClose","handleCategoryFilterChange","e","target","value","handleSectionFilterChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","maxWidth","margin","htmlFor","name","id","onChange","cat","disabled","sect","onClick","length","startTime","endTime","end_time","price","currency","spots","signedCount","participants","totalCapacity","modalType","onClose","_c","$RefreshReg$"],"sources":["D:/ProjectD/client/src/components/Dashboards/AthleteDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getTrainings, getAthleteTrainings, signupForTraining } from '../../services/api';\r\nimport Modal from '../../components/Common/Modal';\r\nimport '../../styles/AthleteDashboard.css';\r\n\r\n// Константа категорій спорту та відповідних секцій (використовується і для фільтрації)\r\nconst sportCategories = {\r\n  \"Ігри з м'ячем\": [\"Футбол\", \"Баскетбол\", \"Бадмінтон\", \"Волейбол\", \"Бейсбол\", \"Регбі\", \"Хокей\"],\r\n  \"Бойові мистецтва\": [\"Карате\", \"Бокс\", \"Ушу\", \"Джиу-джитсу\", \"ММА\"],\r\n  \"Легка атлетика\": [\"Біг\", \"Стрибки\", \"Метання\"],\r\n  \"Водні види спорту\": [\"Плавання\", \"Вітрильний спорт\", \"Каноїзм\"],\r\n  \"Екстремальні види спорту\": [\"Скейбординг\", \"Сноубординг\", \"Альпінізм\"],\r\n  \"Фітнес та тренажерний зал\": [\"Фітнес\", \"Силові тренування\", \"Йога\"]\r\n};\r\n\r\nconst AthleteDashboard = () => {\r\n  // Стан для завантаження всіх тренувань, створених тренерами\r\n  const [allTrainings, setAllTrainings] = useState([]);\r\n  // Стан для тренувань, на які спортсмен уже записаний\r\n  const [registeredTrainings, setRegisteredTrainings] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n\r\n  // Нові стани для фільтрації\r\n  const [filterCategory, setFilterCategory] = useState('');\r\n  const [filterSection, setFilterSection] = useState('');\r\n\r\n  // Завантаження всіх тренувань\r\n  const fetchAllTrainings = async () => {\r\n    try {\r\n      const data = await getTrainings();\r\n      setAllTrainings(data.trainings);\r\n    } catch (err) {\r\n      console.error(\"Помилка отримання тренувань:\", err.message);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Завантаження тренувань, на які спортсмен записаний\r\n  const fetchRegisteredTrainings = async () => {\r\n    const athleteId = localStorage.getItem('userId');\r\n    if (!athleteId) {\r\n      setError(\"Будь ласка, увійдіть як спортсмен\");\r\n      return;\r\n    }\r\n    try {\r\n      const data = await getAthleteTrainings(athleteId);\r\n      setRegisteredTrainings(data.trainings);\r\n    } catch (err) {\r\n      console.error(\"Помилка отримання тренувань:\", err.message);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllTrainings();\r\n    fetchRegisteredTrainings();\r\n  }, []);\r\n\r\n  // Функція групування тренувань за датою (формат dd.mm.yyyy)\r\n  const groupTrainingsByDate = (trainings) => {\r\n    const groups = {};\r\n    trainings.forEach((training) => {\r\n      const dateObj = new Date(training.start_time);\r\n      const formattedDate = dateObj.toLocaleDateString('uk-UA', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric'\r\n      });\r\n      if (!groups[formattedDate]) {\r\n        groups[formattedDate] = [];\r\n      }\r\n      groups[formattedDate].push(training);\r\n    });\r\n    for (const date in groups) {\r\n      groups[date].sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\r\n    }\r\n    return groups;\r\n  };\r\n\r\n  // Форматування часу (HH:MM)\r\n  const formatTime = (timeString) => {\r\n    const date = new Date(timeString);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  // Фільтруємо доступні тренування: видаляємо ті, на які спортсмен уже записаний\r\n  const registeredIds = new Set(registeredTrainings.map(t => t._id));\r\n  let availableTrainings = allTrainings.filter(t => !registeredIds.has(t._id));\r\n\r\n  // Додатково застосовуємо фільтрацію за категорією/секцією\r\n  if (filterCategory) {\r\n    availableTrainings = availableTrainings.filter(t => t.category === filterCategory);\r\n  }\r\n  if (filterSection) {\r\n    availableTrainings = availableTrainings.filter(t => t.section === filterSection);\r\n  }\r\n\r\n  const groupedAvailable = groupTrainingsByDate(availableTrainings);\r\n  const sortedAvailableDates = Object.keys(groupedAvailable).sort((a, b) => {\r\n    const [dayA, monthA, yearA] = a.split('.');\r\n    const [dayB, monthB, yearB] = b.split('.');\r\n    return new Date(yearA, monthA - 1, dayA) - new Date(yearB, monthB - 1, dayB);\r\n  });\r\n\r\n  const groupedRegistered = groupTrainingsByDate(registeredTrainings);\r\n  const sortedRegisteredDates = Object.keys(groupedRegistered).sort((a, b) => {\r\n    const [dayA, monthA, yearA] = a.split('.');\r\n    const [dayB, monthB, yearB] = b.split('.');\r\n    return new Date(yearA, monthA - 1, dayA) - new Date(yearB, monthB - 1, dayB);\r\n  });\r\n\r\n  // Функція для запису спортсмена на тренування\r\n  const handleSignup = async (trainingId) => {\r\n    setError('');\r\n    const athleteId = localStorage.getItem('userId');\r\n    if (!athleteId) {\r\n      setError(\"Будь ласка, увійдіть як спортсмен, щоб записатись на тренування.\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await signupForTraining(trainingId, athleteId);\r\n      setModalMessage(res.message);\r\n      setShowModal(true);\r\n      // Оновлюємо обидві секції після запису\r\n      fetchAllTrainings();\r\n      fetchRegisteredTrainings();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n    setModalMessage('');\r\n  };\r\n\r\n  // Обробка зміни фільтру за категорією\r\n  const handleCategoryFilterChange = (e) => {\r\n    setFilterCategory(e.target.value);\r\n    setFilterSection(''); // при зміні категорії скидаємо секцію\r\n  };\r\n\r\n  // Обробка зміни фільтру за секцією\r\n  const handleSectionFilterChange = (e) => {\r\n    setFilterSection(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Кабінет Спортсмена</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {/* Фільтр для доступних тренувань */}\r\n      <div className=\"filter-container\" style={{ marginBottom: '20px', maxWidth: '500px', margin: '0 auto' }}>\r\n        <h2>Фільтр доступних тренувань</h2>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"filterCategory\">Категорія:</label>\r\n          <select\r\n            name=\"filterCategory\"\r\n            id=\"filterCategory\"\r\n            value={filterCategory}\r\n            onChange={handleCategoryFilterChange}\r\n          >\r\n            <option value=\"\">-- Всі категорії --</option>\r\n            {Object.keys(sportCategories).map((cat) => (\r\n              <option key={cat} value={cat}>{cat}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label htmlFor=\"filterSection\">Секція:</label>\r\n          <select\r\n            name=\"filterSection\"\r\n            id=\"filterSection\"\r\n            value={filterSection}\r\n            onChange={handleSectionFilterChange}\r\n            disabled={!filterCategory}\r\n          >\r\n            <option value=\"\">-- Всі секції --</option>\r\n            {filterCategory && sportCategories[filterCategory].map((sect) => (\r\n              <option key={sect} value={sect}>{sect}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            setFilterCategory('');\r\n            setFilterSection('');\r\n          }}\r\n          className=\"submit-btn\"\r\n          style={{ maxWidth: '200px' }}\r\n        >\r\n          Скинути фільтр\r\n        </button>\r\n      </div>\r\n\r\n      {/* Секція: Доступні тренування */}\r\n      <div className=\"trainings-wrapper\">\r\n        <h2>Доступні тренування</h2>\r\n        {sortedAvailableDates.length === 0 ? (\r\n          <p>Немає доступних тренувань.</p>\r\n        ) : (\r\n          sortedAvailableDates.map((date) => (\r\n            <div key={date} className=\"training-group\">\r\n              <h3 className=\"training-date-header\">{date}</h3>\r\n              <ul className=\"trainings-list\">\r\n                {groupedAvailable[date].map((t) => {\r\n                  const startTime = formatTime(t.start_time);\r\n                  const endTime = formatTime(t.end_time);\r\n                  return (\r\n                    <li key={t._id} className=\"training-item\">\r\n                      Заняття із {t.section} о {startTime} - {endTime}, вартість {t.price} {t.currency}, залишилось місць: {t.spots}\r\n                      <button\r\n                        className=\"signup-btn\"\r\n                        onClick={() => handleSignup(t._id)}\r\n                        disabled={t.spots === 0}\r\n                      >\r\n                        Записатись\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Секція: Ваші тренування */}\r\n      <div className=\"trainings-wrapper\">\r\n        <h2>Ваші тренування</h2>\r\n        {sortedRegisteredDates.length === 0 ? (\r\n          <p>Ви ще не записалися на тренування.</p>\r\n        ) : (\r\n          sortedRegisteredDates.map((date) => (\r\n            <div key={date} className=\"training-group\">\r\n              <h3 className=\"training-date-header\">{date}</h3>\r\n              <ul className=\"trainings-list\">\r\n                {groupedRegistered[date].map((t) => {\r\n                  const startTime = formatTime(t.start_time);\r\n                  const endTime = formatTime(t.end_time);\r\n                  const signedCount = t.participants ? t.participants.length : 0;\r\n                  const totalCapacity = signedCount + t.spots;\r\n                  return (\r\n                    <li key={t._id} className=\"training-item\">\r\n                      {startTime} - {endTime}, записані учасники: {signedCount}\\{totalCapacity}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {showModal && (\r\n        <Modal modalType=\"success\" message={modalMessage} onClose={handleModalClose} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AthleteDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}