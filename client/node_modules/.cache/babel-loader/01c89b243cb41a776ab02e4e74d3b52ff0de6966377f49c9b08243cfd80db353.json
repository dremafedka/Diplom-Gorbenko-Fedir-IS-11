{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000';\nexport const registerUser = async payload => {\n  const res = await fetch(`${API_BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка при реєстрації');\n  }\n  return res.json();\n};\nexport const loginUser = async credentials => {\n  const res = await fetch(`${API_BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка авторизації');\n  }\n  return res.json();\n};\nexport const createTraining = async trainingData => {\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(trainingData)\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    let errorMsg = '';\n    if (typeof errorData.detail === 'string') {\n      errorMsg = errorData.detail;\n    } else {\n      errorMsg = 'Помилка створення тренування';\n    }\n    throw new Error(errorMsg);\n  }\n  return res.json();\n};\nexport const getCoachTrainings = async coachId => {\n  const res = await fetch(`${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`);\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\n  }\n  return res.json(); // { trainings: [...] }\n};\nexport const getTrainings = async () => {\n  const res = await fetch(`${API_BASE_URL}/trainings`);\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\n  }\n  return res.json(); // { trainings: [...] }\n};\nexport const signupForTraining = async (training_id, athlete_id) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${training_id}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      athlete_id\n    })\n  });\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка запису на тренування');\n  }\n  return res.json();\n};\nexport const getTrainingParticipants = async training_id => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${training_id}/participants`);\n  if (!res.ok) {\n    const errorData = await res.json();\n    throw new Error(errorData.detail || 'Помилка отримання учасників');\n  }\n  return res.json(); // { participants: [...] }\n};","map":{"version":3,"names":["API_BASE_URL","registerUser","payload","res","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","loginUser","credentials","createTraining","trainingData","errorMsg","getCoachTrainings","coachId","encodeURIComponent","getTrainings","signupForTraining","training_id","athlete_id","getTrainingParticipants"],"sources":["D:/ProjectD/client/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\r\n\r\nexport const registerUser = async (payload) => {\r\n  const res = await fetch(`${API_BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(payload)\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка при реєстрації');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const loginUser = async (credentials) => {\r\n  const res = await fetch(`${API_BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(credentials)\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка авторизації');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const createTraining = async (trainingData) => {\r\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(trainingData)\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    let errorMsg = '';\r\n    if (typeof errorData.detail === 'string') {\r\n      errorMsg = errorData.detail;\r\n    } else {\r\n      errorMsg = 'Помилка створення тренування';\r\n    }\r\n    throw new Error(errorMsg);\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getCoachTrainings = async (coachId) => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`);\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\r\n  }\r\n  return res.json(); // { trainings: [...] }\r\n};\r\n\r\nexport const getTrainings = async () => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings`);\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка отримання тренувань');\r\n  }\r\n  return res.json(); // { trainings: [...] }\r\n};\r\n\r\nexport const signupForTraining = async (training_id, athlete_id) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${training_id}/signup`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ athlete_id })\r\n  });\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка запису на тренування');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getTrainingParticipants = async (training_id) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${training_id}/participants`);\r\n  if (!res.ok) {\r\n    const errorData = await res.json();\r\n    throw new Error(errorData.detail || 'Помилка отримання учасників');\r\n  }\r\n  return res.json(); // { participants: [...] }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}