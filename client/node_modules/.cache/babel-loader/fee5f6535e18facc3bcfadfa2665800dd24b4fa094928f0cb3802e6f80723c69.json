{"ast":null,"code":"// services/api.js\n\nexport const API_BASE_URL = 'http://localhost:8000';\n\n/**\r\n * Перевіряє відповідь сервера і викидає помилку з читабельним повідомленням.\r\n * Якщо сервер повертає detail як масив (валидаційні помилки), з’єднуємо їх у рядок.\r\n * Обрізаємо будь‑який префікс до першої коми (наприклад \"Value error,\").\r\n */\nasync function checkResponse(res, defaultMsg) {\n  if (!res.ok) {\n    let errorText = defaultMsg;\n    try {\n      const errorData = await res.json();\n      const detail = errorData.detail;\n      const stripPrefix = text => text.replace(/^[^,]+,\\s*/i, '');\n      if (Array.isArray(detail)) {\n        errorText = detail.map(err => stripPrefix(err.msg)).join('; ');\n      } else if (typeof detail === 'string') {\n        errorText = stripPrefix(detail);\n      }\n    } catch {\n      // ігноруємо помилки JSON\n    }\n    throw new Error(errorText);\n  }\n  return res.json();\n}\n\n// ————————————————————————————————————————————————————————————————\n// Auth\n// ————————————————————————————————————————————————————————————————\n\nexport const registerUser = payload => fetch(`${API_BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(payload)\n}).then(res => checkResponse(res, 'Помилка при реєстрації'));\nexport const loginUser = credentials => fetch(`${API_BASE_URL}/login`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(credentials)\n}).then(res => checkResponse(res, 'Помилка авторизації'));\n\n// ————————————————————————————————————————————————————————————————\n// Trainings (Athlete & Public)\n// ————————————————————————————————————————————————————————————————\n\nexport const getTrainings = async () => {\n  const res = await fetch(`${API_BASE_URL}/trainings`);\n  return checkResponse(res, 'Помилка отримання тренувань');\n};\nexport async function getAthleteTrainings(athleteId) {\n  const res = await fetch(`${API_BASE_URL}/athlete/trainings?athlete_id=${athleteId}`);\n  const {\n    trainings\n  } = await res.json();\n  return {\n    trainings: trainings.map(t => ({\n      ...t,\n      id: t._id,\n      // додаємо зручне поле\n      _id: undefined // або видаляємо, якщо хочемо\n    }))\n  };\n}\nexport const signupForTraining = (trainingId, athleteId) => fetch(`${API_BASE_URL}/trainings/${trainingId}/signup`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    athlete_id: athleteId\n  })\n}).then(res => checkResponse(res, 'Помилка запису на тренування'));\nexport const cancelEnrollment = (trainingId, athleteId) => fetch(`${API_BASE_URL}/trainings/${trainingId}/cancel`, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    athlete_id: athleteId\n  })\n}).then(res => checkResponse(res, 'Помилка скасування запису'));\n\n// ————————————————————————————————————————————————————————————————\n// Coach-specific endpoints\n// ————————————————————————————————————————————————————————————————\n\nexport const createTraining = async trainingData => {\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(trainingData)\n  });\n  return checkResponse(res, 'Помилка створення тренування');\n};\nexport const getCoachTrainings = async coachId => {\n  const res = await fetch(`${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`);\n  return checkResponse(res, 'Помилка отримання тренувань тренера');\n};\nexport const getTrainingParticipants = async trainingId => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/participants`);\n  return checkResponse(res, 'Помилка отримання учасників тренування');\n};\nexport const updateTraining = async (trainingId, updateData) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  });\n  return checkResponse(res, 'Помилка оновлення тренування');\n};\nexport const deleteTraining = async trainingId => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${encodeURIComponent(trainingId)}`, {\n    method: 'DELETE'\n  });\n  return checkResponse(res, 'Помилка видалення тренування');\n};\n\n// ————————————————————————————————————————————————————————————————\n// Coach profile & security\n// ————————————————————————————————————————————————————————————————\n\nexport const getCoachProfile = async coachId => {\n  const res = await fetch(`${API_BASE_URL}/coach/profile?coach_id=${encodeURIComponent(coachId)}`);\n  const data = await checkResponse(res, 'Помилка завантаження профілю');\n  if (data.profile.avatar_url) {\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}`;\n  }\n  return data;\n};\nexport const updateCoachProfile = async payload => {\n  const res = await fetch(`${API_BASE_URL}/coach/profile`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  const data = await checkResponse(res, 'Помилка оновлення профілю');\n  if (data.profile.avatar_url) {\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}`;\n  }\n  return data;\n};\nexport const changeCoachPassword = async payload => {\n  const res = await fetch(`${API_BASE_URL}/coach/change-password`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  return checkResponse(res, 'Помилка зміни пароля');\n};\nexport const uploadCoachAvatar = async (userId, file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const res = await fetch(`${API_BASE_URL}/coach/avatar?user_id=${encodeURIComponent(userId)}`, {\n    method: 'POST',\n    body: formData\n  });\n  const data = await checkResponse(res, 'Помилка завантаження аватарки');\n  return {\n    avatar_url: `${API_BASE_URL}${data.avatar_url}`\n  };\n};\n\n// ————————————————————————————————————————————————————————————————\n// Reviews\n// ————————————————————————————————————————————————————————————————\n\nexport const getCoachReviews = async coachId => {\n  const res = await fetch(`${API_BASE_URL}/coach/${coachId}/reviews`);\n  return checkResponse(res, 'Помилка завантаження відгуків');\n};\nexport const submitReview = async review => {\n  const res = await fetch(`${API_BASE_URL}/coach/review`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      coach_id: review.coach_id,\n      athlete_id: review.athlete_id,\n      rating: review.rating,\n      comment: review.comment || \"\"\n    })\n  });\n  return checkResponse(res, 'Помилка відправки відгуку');\n};\nexport const updateReview = async (reviewId, review) => {\n  const res = await fetch(`${API_BASE_URL}/coach/review/${reviewId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      rating: review.rating,\n      comment: review.comment || \"\"\n    })\n  });\n  return checkResponse(res, 'Помилка оновлення відгуку');\n};\nexport const deleteReview = async (reviewId, athleteId) => {\n  const res = await fetch(`${API_BASE_URL}/coach/review/${reviewId}?athlete_id=${encodeURIComponent(athleteId)}`, {\n    method: 'DELETE'\n  });\n  return checkResponse(res, 'Помилка видалення відгуку');\n};\n\n// ————————————————————————————————————————————————————————————————\n// Athlete profile & security\n// ————————————————————————————————————————————————————————————————\n\nexport const getAthleteProfile = async athleteId => {\n  const res = await fetch(`${API_BASE_URL}/athlete/profile?athlete_id=${encodeURIComponent(athleteId)}`);\n  const data = await checkResponse(res, 'Помилка завантаження профілю');\n  if (data.profile.avatar_url) {\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}?t=${Date.now()}`;\n  }\n  return data;\n};\nexport const updateAthleteProfile = async payload => {\n  const res = await fetch(`${API_BASE_URL}/athlete/profile`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  const data = await checkResponse(res, 'Помилка оновлення профілю');\n  if (data.profile.avatar_url) {\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}`;\n  }\n  return data;\n};\nexport const changeAthletePassword = async payload => {\n  const res = await fetch(`${API_BASE_URL}/athlete/change-password`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  return checkResponse(res, 'Помилка зміни пароля');\n};\nexport const uploadAthleteAvatar = async (userId, file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  const res = await fetch(`${API_BASE_URL}/athlete/avatar?user_id=${encodeURIComponent(userId)}`, {\n    method: 'POST',\n    body: formData\n  });\n  const data = await checkResponse(res, 'Помилка завантаження аватарки');\n  return {\n    avatar_url: `${API_BASE_URL}${data.avatar_url}`\n  };\n};\nexport const getRecommendations = async athleteId => {\n  const res = await fetch(`${API_BASE_URL}/recommendations?athlete_id=${encodeURIComponent(athleteId)}`);\n  return checkResponse(res, 'Помилка отримання рекомендацій');\n};","map":{"version":3,"names":["API_BASE_URL","checkResponse","res","defaultMsg","ok","errorText","errorData","json","detail","stripPrefix","text","replace","Array","isArray","map","err","msg","join","Error","registerUser","payload","fetch","method","headers","body","JSON","stringify","then","loginUser","credentials","getTrainings","getAthleteTrainings","athleteId","trainings","t","id","_id","undefined","signupForTraining","trainingId","athlete_id","cancelEnrollment","createTraining","trainingData","getCoachTrainings","coachId","encodeURIComponent","getTrainingParticipants","updateTraining","updateData","deleteTraining","getCoachProfile","data","profile","avatar_url","updateCoachProfile","changeCoachPassword","uploadCoachAvatar","userId","file","formData","FormData","append","getCoachReviews","submitReview","review","coach_id","rating","comment","updateReview","reviewId","deleteReview","getAthleteProfile","Date","now","updateAthleteProfile","changeAthletePassword","uploadAthleteAvatar","getRecommendations"],"sources":["D:/ProjectD/client/src/services/api.js"],"sourcesContent":["// services/api.js\r\n\r\nexport const API_BASE_URL = 'http://localhost:8000';\r\n\r\n/**\r\n * Перевіряє відповідь сервера і викидає помилку з читабельним повідомленням.\r\n * Якщо сервер повертає detail як масив (валидаційні помилки), з’єднуємо їх у рядок.\r\n * Обрізаємо будь‑який префікс до першої коми (наприклад \"Value error,\").\r\n */\r\nasync function checkResponse(res, defaultMsg) {\r\n  if (!res.ok) {\r\n    let errorText = defaultMsg;\r\n    try {\r\n      const errorData = await res.json();\r\n      const detail = errorData.detail;\r\n      const stripPrefix = text => text.replace(/^[^,]+,\\s*/i, '');\r\n\r\n      if (Array.isArray(detail)) {\r\n        errorText = detail\r\n          .map(err => stripPrefix(err.msg))\r\n          .join('; ');\r\n      } else if (typeof detail === 'string') {\r\n        errorText = stripPrefix(detail);\r\n      }\r\n    } catch {\r\n      // ігноруємо помилки JSON\r\n    }\r\n    throw new Error(errorText);\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// ————————————————————————————————————————————————————————————————\r\n// Auth\r\n// ————————————————————————————————————————————————————————————————\r\n\r\nexport const registerUser = payload =>\r\n  fetch(`${API_BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(payload)\r\n  }).then(res => checkResponse(res, 'Помилка при реєстрації'));\r\n\r\nexport const loginUser = credentials =>\r\n  fetch(`${API_BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(credentials)\r\n  }).then(res => checkResponse(res, 'Помилка авторизації'));\r\n\r\n// ————————————————————————————————————————————————————————————————\r\n// Trainings (Athlete & Public)\r\n// ————————————————————————————————————————————————————————————————\r\n\r\nexport const getTrainings = async () => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings`);\r\n  return checkResponse(res, 'Помилка отримання тренувань');\r\n};\r\n\r\nexport async function getAthleteTrainings(athleteId) {\r\n  const res = await fetch(`${API_BASE_URL}/athlete/trainings?athlete_id=${athleteId}`);\r\n  const { trainings } = await res.json();\r\n  return {\r\n    trainings: trainings.map(t => ({\r\n      ...t,\r\n      id: t._id,     // додаємо зручне поле\r\n      _id: undefined // або видаляємо, якщо хочемо\r\n    }))\r\n  };\r\n}\r\n\r\nexport const signupForTraining = (trainingId, athleteId) =>\r\n  fetch(`${API_BASE_URL}/trainings/${trainingId}/signup`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ athlete_id: athleteId })\r\n  }).then(res => checkResponse(res, 'Помилка запису на тренування'));\r\n\r\nexport const cancelEnrollment = (trainingId, athleteId) =>\r\n  fetch(`${API_BASE_URL}/trainings/${trainingId}/cancel`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ athlete_id: athleteId })\r\n  }).then(res => checkResponse(res, 'Помилка скасування запису'));\r\n\r\n// ————————————————————————————————————————————————————————————————\r\n// Coach-specific endpoints\r\n// ————————————————————————————————————————————————————————————————\r\n\r\nexport const createTraining = async trainingData => {\r\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(trainingData)\r\n  });\r\n  return checkResponse(res, 'Помилка створення тренування');\r\n};\r\n\r\nexport const getCoachTrainings = async coachId => {\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`\r\n  );\r\n  return checkResponse(res, 'Помилка отримання тренувань тренера');\r\n};\r\n\r\nexport const getTrainingParticipants = async trainingId => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/participants`);\r\n  return checkResponse(res, 'Помилка отримання учасників тренування');\r\n};\r\n\r\nexport const updateTraining = async (trainingId, updateData) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(updateData)\r\n  });\r\n  return checkResponse(res, 'Помилка оновлення тренування');\r\n};\r\n\r\nexport const deleteTraining = async trainingId => {\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/trainings/${encodeURIComponent(trainingId)}`,\r\n    { method: 'DELETE' }\r\n  );\r\n  return checkResponse(res, 'Помилка видалення тренування');\r\n};\r\n\r\n// ————————————————————————————————————————————————————————————————\r\n// Coach profile & security\r\n// ————————————————————————————————————————————————————————————————\r\n\r\nexport const getCoachProfile = async coachId => {\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/coach/profile?coach_id=${encodeURIComponent(coachId)}`\r\n  );\r\n  const data = await checkResponse(res, 'Помилка завантаження профілю');\r\n  if (data.profile.avatar_url) {\r\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}`;\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const updateCoachProfile = async payload => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/profile`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(payload)\r\n  });\r\n  const data = await checkResponse(res, 'Помилка оновлення профілю');\r\n  if (data.profile.avatar_url) {\r\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}`;\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const changeCoachPassword = async payload => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/change-password`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(payload)\r\n  });\r\n  return checkResponse(res, 'Помилка зміни пароля');\r\n};\r\n\r\nexport const uploadCoachAvatar = async (userId, file) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/coach/avatar?user_id=${encodeURIComponent(userId)}`,\r\n    { method: 'POST', body: formData }\r\n  );\r\n  const data = await checkResponse(res, 'Помилка завантаження аватарки');\r\n  return { avatar_url: `${API_BASE_URL}${data.avatar_url}` };\r\n};\r\n\r\n// ————————————————————————————————————————————————————————————————\r\n// Reviews\r\n// ————————————————————————————————————————————————————————————————\r\n\r\nexport const getCoachReviews = async coachId => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/${coachId}/reviews`);\r\n  return checkResponse(res, 'Помилка завантаження відгуків');\r\n};\r\n\r\nexport const submitReview = async review => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/review`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      coach_id: review.coach_id,\r\n      athlete_id: review.athlete_id,\r\n      rating: review.rating,\r\n      comment: review.comment || \"\"\r\n    })\r\n  });\r\n  return checkResponse(res, 'Помилка відправки відгуку');\r\n};\r\n\r\nexport const updateReview = async (reviewId, review) => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/review/${reviewId}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      rating: review.rating,\r\n      comment: review.comment || \"\"\r\n    })\r\n  });\r\n  return checkResponse(res, 'Помилка оновлення відгуку');\r\n};\r\n\r\nexport const deleteReview = async (reviewId, athleteId) => {\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/coach/review/${reviewId}?athlete_id=${encodeURIComponent(athleteId)}`,\r\n    { method: 'DELETE' }\r\n  );\r\n  return checkResponse(res, 'Помилка видалення відгуку');\r\n};\r\n\r\n// ————————————————————————————————————————————————————————————————\r\n// Athlete profile & security\r\n// ————————————————————————————————————————————————————————————————\r\n\r\nexport const getAthleteProfile = async athleteId => {\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/athlete/profile?athlete_id=${encodeURIComponent(athleteId)}`\r\n  );\r\n  const data = await checkResponse(res, 'Помилка завантаження профілю');\r\n  if (data.profile.avatar_url) {\r\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}?t=${Date.now()}`;\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const updateAthleteProfile = async payload => {\r\n  const res = await fetch(`${API_BASE_URL}/athlete/profile`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(payload)\r\n  });\r\n  const data = await checkResponse(res, 'Помилка оновлення профілю');\r\n  if (data.profile.avatar_url) {\r\n    data.profile.avatar_url = `${API_BASE_URL}${data.profile.avatar_url}`;\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const changeAthletePassword = async payload => {\r\n  const res = await fetch(`${API_BASE_URL}/athlete/change-password`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(payload)\r\n  });\r\n  return checkResponse(res, 'Помилка зміни пароля');\r\n};\r\n\r\nexport const uploadAthleteAvatar = async (userId, file) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/athlete/avatar?user_id=${encodeURIComponent(userId)}`,\r\n    { method: 'POST', body: formData }\r\n  );\r\n  const data = await checkResponse(res, 'Помилка завантаження аватарки');\r\n  return { avatar_url: `${API_BASE_URL}${data.avatar_url}` };\r\n};\r\n\r\n\r\nexport const getRecommendations = async athleteId => {\r\n  const res = await fetch(\r\n    `${API_BASE_URL}/recommendations?athlete_id=${encodeURIComponent(athleteId)}`\r\n  );\r\n  return checkResponse(res, 'Помилка отримання рекомендацій');\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}