{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000';\nexport const registerUser = async payload => {\n  const res = await fetch(`${API_BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка при реєстрації');\n  }\n  return res.json();\n};\nexport const loginUser = async credentials => {\n  const res = await fetch(`${API_BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка авторизації');\n  }\n  return res.json();\n};\nexport const getTrainings = async () => {\n  const res = await fetch(`${API_BASE_URL}/trainings`);\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка отримання тренувань');\n  }\n  return res.json();\n};\nexport const getAthleteTrainings = async athleteId => {\n  const res = await fetch(`${API_BASE_URL}/athlete/trainings?athlete_id=${encodeURIComponent(athleteId)}`);\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка отримання тренувань спортсмена');\n  }\n  return res.json();\n};\nexport const signupForTraining = async (trainingId, athleteId) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      athlete_id: athleteId\n    })\n  });\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка запису');\n  }\n  return res.json();\n};\nexport const cancelEnrollment = async (trainingId, athleteId) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/cancel`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      athlete_id: athleteId\n    })\n  });\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка скасування');\n  }\n  return res.json();\n};\nexport const createTraining = async trainingData => {\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(trainingData)\n  });\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка створення тренування');\n  }\n  return res.json();\n};\nexport const getCoachTrainings = async coachId => {\n  const res = await fetch(`${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`);\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка отримання тренувань');\n  }\n  return res.json();\n};\nexport const getTrainingParticipants = async trainingId => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/participants`);\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка отримання учасників');\n  }\n  return res.json();\n};\nexport const updateTraining = async (trainingId, updateData) => {\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  });\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка оновлення тренування');\n  }\n  return res.json();\n};\n\n// — нові методи профілю —\nexport const getCoachProfile = async coachId => {\n  const res = await fetch(`${API_BASE_URL}/coach/profile?coach_id=${encodeURIComponent(coachId)}`);\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка отримання профілю');\n  }\n  return res.json();\n};\nexport const updateCoachProfile = async profileData => {\n  const res = await fetch(`${API_BASE_URL}/coach/profile`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(profileData)\n  });\n  if (!res.ok) {\n    const e = await res.json();\n    throw new Error(e.detail || 'Помилка оновлення профілю');\n  }\n  return res.json();\n};","map":{"version":3,"names":["API_BASE_URL","registerUser","payload","res","fetch","method","headers","body","JSON","stringify","ok","e","json","Error","detail","loginUser","credentials","getTrainings","getAthleteTrainings","athleteId","encodeURIComponent","signupForTraining","trainingId","athlete_id","cancelEnrollment","createTraining","trainingData","getCoachTrainings","coachId","getTrainingParticipants","updateTraining","updateData","getCoachProfile","updateCoachProfile","profileData"],"sources":["D:/ProjectD/client/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\r\n\r\nexport const registerUser = async payload => {\r\n  const res = await fetch(`${API_BASE_URL}/register`, {\r\n    method:'POST',\r\n    headers:{'Content-Type':'application/json'},\r\n    body: JSON.stringify(payload)\r\n  });\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка при реєстрації');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const loginUser = async credentials => {\r\n  const res = await fetch(`${API_BASE_URL}/login`, {\r\n    method:'POST',\r\n    headers:{'Content-Type':'application/json'},\r\n    body: JSON.stringify(credentials)\r\n  });\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка авторизації');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getTrainings = async () => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings`);\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка отримання тренувань');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getAthleteTrainings = async athleteId => {\r\n  const res = await fetch(`${API_BASE_URL}/athlete/trainings?athlete_id=${encodeURIComponent(athleteId)}`);\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка отримання тренувань спортсмена');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const signupForTraining = async (trainingId, athleteId) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/signup`, {\r\n    method:'POST',\r\n    headers:{'Content-Type':'application/json'},\r\n    body: JSON.stringify({athlete_id:athleteId})\r\n  });\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка запису');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const cancelEnrollment = async (trainingId, athleteId) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/cancel`, {\r\n    method:'POST',\r\n    headers:{'Content-Type':'application/json'},\r\n    body: JSON.stringify({athlete_id:athleteId})\r\n  });\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка скасування');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const createTraining = async trainingData => {\r\n  const res = await fetch(`${API_BASE_URL}/create-training`, {\r\n    method:'POST',\r\n    headers:{'Content-Type':'application/json'},\r\n    body: JSON.stringify(trainingData)\r\n  });\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка створення тренування');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getCoachTrainings = async coachId => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/trainings?coach_id=${encodeURIComponent(coachId)}`);\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка отримання тренувань');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const getTrainingParticipants = async trainingId => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}/participants`);\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка отримання учасників');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const updateTraining = async (trainingId, updateData) => {\r\n  const res = await fetch(`${API_BASE_URL}/trainings/${trainingId}`, {\r\n    method:'PUT',\r\n    headers:{'Content-Type':'application/json'},\r\n    body: JSON.stringify(updateData)\r\n  });\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка оновлення тренування');\r\n  }\r\n  return res.json();\r\n};\r\n\r\n// — нові методи профілю —\r\nexport const getCoachProfile = async coachId => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/profile?coach_id=${encodeURIComponent(coachId)}`);\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка отримання профілю');\r\n  }\r\n  return res.json();\r\n};\r\n\r\nexport const updateCoachProfile = async profileData => {\r\n  const res = await fetch(`${API_BASE_URL}/coach/profile`, {\r\n    method:'PUT',\r\n    headers:{'Content-Type':'application/json'},\r\n    body: JSON.stringify(profileData)\r\n  });\r\n  if(!res.ok){\r\n    const e = await res.json();\r\n    throw new Error(e.detail||'Помилка оновлення профілю');\r\n  }\r\n  return res.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAMC,OAAO,IAAI;EAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,EAAE;IAClDK,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;EAC9B,CAAC,CAAC;EACF,IAAG,CAACC,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,wBAAwB,CAAC;EACrD;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAMC,WAAW,IAAI;EAC5C,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,QAAQ,EAAE;IAC/CK,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,WAAW;EAClC,CAAC,CAAC;EACF,IAAG,CAACb,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,qBAAqB,CAAC;EAClD;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,YAAY,CAAC;EACpD,IAAG,CAACG,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,6BAA6B,CAAC;EAC1D;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMM,mBAAmB,GAAG,MAAMC,SAAS,IAAI;EACpD,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,iCAAiCoB,kBAAkB,CAACD,SAAS,CAAC,EAAE,CAAC;EACxG,IAAG,CAAChB,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,wCAAwC,CAAC;EACrE;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMS,iBAAiB,GAAG,MAAAA,CAAOC,UAAU,EAAEH,SAAS,KAAK;EAChE,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,cAAcsB,UAAU,SAAS,EAAE;IACxEjB,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACc,UAAU,EAACJ;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,IAAG,CAAChB,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,gBAAgB,CAAC;EAC7C;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMY,gBAAgB,GAAG,MAAAA,CAAOF,UAAU,EAAEH,SAAS,KAAK;EAC/D,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,cAAcsB,UAAU,SAAS,EAAE;IACxEjB,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACc,UAAU,EAACJ;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,IAAG,CAAChB,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,oBAAoB,CAAC;EACjD;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMa,cAAc,GAAG,MAAMC,YAAY,IAAI;EAClD,MAAMvB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,kBAAkB,EAAE;IACzDK,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACiB,YAAY;EACnC,CAAC,CAAC;EACF,IAAG,CAACvB,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,8BAA8B,CAAC;EAC3D;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMe,iBAAiB,GAAG,MAAMC,OAAO,IAAI;EAChD,MAAMzB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,6BAA6BoB,kBAAkB,CAACQ,OAAO,CAAC,EAAE,CAAC;EAClG,IAAG,CAACzB,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,6BAA6B,CAAC;EAC1D;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMiB,uBAAuB,GAAG,MAAMP,UAAU,IAAI;EACzD,MAAMnB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,cAAcsB,UAAU,eAAe,CAAC;EAC/E,IAAG,CAACnB,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,6BAA6B,CAAC;EAC1D;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMkB,cAAc,GAAG,MAAAA,CAAOR,UAAU,EAAES,UAAU,KAAK;EAC9D,MAAM5B,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,cAAcsB,UAAU,EAAE,EAAE;IACjEjB,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACsB,UAAU;EACjC,CAAC,CAAC;EACF,IAAG,CAAC5B,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,8BAA8B,CAAC;EAC3D;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;;AAED;AACA,OAAO,MAAMoB,eAAe,GAAG,MAAMJ,OAAO,IAAI;EAC9C,MAAMzB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,2BAA2BoB,kBAAkB,CAACQ,OAAO,CAAC,EAAE,CAAC;EAChG,IAAG,CAACzB,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,2BAA2B,CAAC;EACxD;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,OAAO,MAAMqB,kBAAkB,GAAG,MAAMC,WAAW,IAAI;EACrD,MAAM/B,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,gBAAgB,EAAE;IACvDK,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC3CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACyB,WAAW;EAClC,CAAC,CAAC;EACF,IAAG,CAAC/B,GAAG,CAACO,EAAE,EAAC;IACT,MAAMC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACF,CAAC,CAACG,MAAM,IAAE,2BAA2B,CAAC;EACxD;EACA,OAAOX,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}